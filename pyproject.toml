[tool.poetry]
name = "solana-actions"
version = "0.1.0"
description = "Solana Actions library"
authors = ["Fabian Schuh <mail@xeroc.org>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
solana = "^0.34.2"
pydantic = "^2.7.4"
solders = "^0.21.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
coverage = "^7.5.4"
black = "^24.4.2"
mypy = "^1.10.1"
autoflake = "^2.3.1"
pytest-asyncio = "^0.23.7"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.5.27"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length = 120

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomated Release Commit"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = ["src/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]

[tool.bandit]
exclude_dirs = [".env", "tests"]
skips = ["B101"]
